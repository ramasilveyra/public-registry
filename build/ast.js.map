{"version":3,"sources":["../src/ast.js"],"names":["rootName","createRoot","type","children","elementName","createElement","tagName","attributes","textName","createText","value","attributeName","createAttribute","name","valuePath","isBoolean","isString","interpolationEscapedName","createInterpolationEscaped","conditionName","createCondition","testPath","consequent","alternate","iterationName","createIteration","iterablePath","currentValuePath","indexPath","arrayPath","body","mixinName","createMixin","props"],"mappings":";;;;;AAAA;AACO,MAAMA,8BAAW,SAAjB;AACA,MAAMC,kCAAa,OAAO;AAC/BC,QAAMF,QADyB;AAE/BG,YAAU;AAFqB,CAAP,CAAnB;;AAKP;AACO,MAAMC,oCAAc,SAApB;AACA,MAAMC,wCAAgB,CAACC,OAAD,EAAUC,aAAa,EAAvB,MAA+B;AAC1DL,QAAME,WADoD;AAE1DE,SAF0D;AAG1DC,YAH0D;AAI1DJ,YAAU;AAJgD,CAA/B,CAAtB;;AAOP;AACO,MAAMK,8BAAW,MAAjB;AACA,MAAMC,kCAAaC,UAAU;AAClCR,QAAMM,QAD4B;AAElCE;AAFkC,CAAV,CAAnB;;AAKP;AACO,MAAMC,wCAAgB,WAAtB;AACA,MAAMC,4CAAkB,CAAC;AAC9BC,MAD8B;AAE9BH,OAF8B;AAG9BI,WAH8B;AAI9BC,cAAY,KAJkB;AAK9BC,aAAW;AALmB,CAAD,MAMxB;AACLd,QAAMS,aADD;AAELE,MAFK;AAGLH,OAHK;AAILI,WAJK;AAKLC,WALK;AAMLC;AANK,CANwB,CAAxB;;AAeP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACO,MAAMC,8DAA2B,sBAAjC;AACA,MAAMC,kEAA6BJ,cAAc;AACtDZ,QAAMe,wBADgD;AAEtDH;AAFsD,CAAd,CAAnC;;AAKP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACO,MAAMK,wCAAgB,WAAtB;AACA,MAAMC,4CAAkB,CAAC,EAAEC,QAAF,EAAYC,UAAZ,EAAwBC,YAAY,IAApC,EAAD,MAAiD;AAC9ErB,QAAMiB,aADwE;AAE9EE,UAF8E;AAG9EC,YAH8E;AAI9EC;AAJ8E,CAAjD,CAAxB;;AAOP;AACO,MAAMC,wCAAgB,WAAtB;AACA,MAAMC,4CAAkB,CAAC;AAC9BC,cAD8B;AAE9BC,kBAF8B;AAG9BC,WAH8B;AAI9BC,WAJ8B;AAK9BC,SAAO;AALuB,CAAD,MAMxB;AACL5B,QAAMsB,aADD;AAELE,cAFK;AAGLC,kBAHK;AAILC,WAJK;AAKLC,WALK;AAMLC;AANK,CANwB,CAAxB;;AAeP;AACO,MAAMC,gCAAY,OAAlB;AACA,MAAMC,oCAAc,CAACnB,IAAD,EAAOoB,KAAP,MAAkB;AAC3C/B,QAAM6B,SADqC;AAE3ClB,MAF2C;AAG3CoB,OAH2C;AAI3C9B,YAAU;AAJiC,CAAlB,CAApB","file":"ast.js","sourcesContent":["// Root.\nexport const rootName = 'Program';\nexport const createRoot = () => ({\n  type: rootName,\n  children: []\n});\n\n// HTML elements.\nexport const elementName = 'Element';\nexport const createElement = (tagName, attributes = []) => ({\n  type: elementName,\n  tagName,\n  attributes,\n  children: []\n});\n\n// HTML text elements.\nexport const textName = 'Text';\nexport const createText = value => ({\n  type: textName,\n  value\n});\n\n// HTML attributes.\nexport const attributeName = 'Attribute';\nexport const createAttribute = ({\n  name,\n  value,\n  valuePath,\n  isBoolean = false,\n  isString = false\n}) => ({\n  type: attributeName,\n  name,\n  value,\n  valuePath,\n  isBoolean,\n  isString\n});\n\n// Template engine syntax for inline JavaScript.\n// export const scriptletName = 'Scriptlet';\n// export const createScriptlet = value => ({\n//   type: scriptletName,\n//   value\n// });\n\n// Template engine syntax for escaped interpolation.\nexport const interpolationEscapedName = 'InterpolationEscaped';\nexport const createInterpolationEscaped = valuePath => ({\n  type: interpolationEscapedName,\n  valuePath\n});\n\n// Template engine syntax for unescaped interpolation.\n// export const interpolationUnescapedName = 'InterpolationUnescaped';\n// export const createInterpolationUnescaped = value => ({\n//   type: interpolationUnescapedName,\n//   value\n// });\n\n// Template engine syntax for condition.\nexport const conditionName = 'Condition';\nexport const createCondition = ({ testPath, consequent, alternate = null }) => ({\n  type: conditionName,\n  testPath,\n  consequent,\n  alternate\n});\n\n// Template engine syntax for iteration.\nexport const iterationName = 'Iteration';\nexport const createIteration = ({\n  iterablePath,\n  currentValuePath,\n  indexPath,\n  arrayPath,\n  body = null\n}) => ({\n  type: iterationName,\n  iterablePath,\n  currentValuePath,\n  indexPath,\n  arrayPath,\n  body\n});\n\n// Template engine syntax for mixin.\nexport const mixinName = 'Mixin';\nexport const createMixin = (name, props) => ({\n  type: mixinName,\n  name,\n  props,\n  children: []\n});\n"]}