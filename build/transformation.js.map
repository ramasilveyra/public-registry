{"version":3,"sources":["../src/transformation.js"],"names":["t","transformation","oldAst","inputFilePath","newAst","table","components","dependencies","reactComponentVisitor","JSXElement","path","tagName","node","openingElement","name","isFromDependency","isUsedAsRC","element","context","getContext","setContext","JSXText","elems","value","text","JSXExpressionContainer","isJSXAttribute","parent","expressionPath","get","expressionNode","isLogicalExpression","operator","isConditionalExpression","isMapIterator","isStringLiteral","interpolationEscaped","JSXAttribute","valueNode","shouldIgnoreAttr","attribute","isBoolean","isString","expression","isJSXElement","isNode","styles","properties","forEach","prop","key","stringInlineStyles","valuePath","CallExpression","isIterator","iterablePath","currentValuePath","indexPath","arrayPath","iteration","LogicalExpression","test","findParent","left","condition","testPath","consequent","ConditionalExpression","ignoreConsequent","isNullLiteral","replaceWith","UnaryExpression","StringLiteral","generalVisitor","ImportDeclaration","source","specifier","specifiers","find","isImportDefaultSpecifier","local","requiredFrom","VariableDeclaration","checkForReactComponent","FunctionDeclaration","ExportDefaultDeclaration","exportedComponent","declaration","component","defaultExport","ObjectExpression","isAssignmentExpression","isMemberExpression","isObjectExpression","right","isIdentifier","object","property","isPropTypes","isDefaultProps","componentName","definitions","map","index","createDefinition","definition","mainComponent","Object","values","ast","is","isFunctionDeclaration","isExportDefaultDeclaration","props","mixin","createdFrom","traverse","_context","pathItem","callee","includes","newDef","assign","isRequired","defaultPath"],"mappings":"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","file":"transformation.js","sourcesContent":["/* eslint-disable no-underscore-dangle, no-param-reassign */\nimport babelTraverse from '@babel/traverse';\nimport * as t from '@babel/types';\nimport cleanJSXElementLiteralChild from '@babel/types/lib/utils/react/cleanJSXElementLiteralChild';\nimport {\n  createAttribute,\n  createCondition,\n  createElement,\n  createInterpolationEscaped,\n  createIteration,\n  createMixin,\n  createRoot,\n  createText\n} from './ast';\nimport isFunctionalReactComponent from './utils/is-functional-react-component';\nimport getReactComponentName from './utils/get-react-component-name';\nimport addToContext from './utils/add-to-context';\nimport getReactComponentProps from './utils/get-react-component-props';\nimport inlineStyles from './utils/inline-styles';\n\nfunction transformation(oldAst, inputFilePath) {\n  const newAst = createRoot();\n  const table = { components: {}, dependencies: {} };\n\n  const reactComponentVisitor = {\n    JSXElement(path) {\n      const tagName = path.node.openingElement.name.name;\n      const isFromDependency = table.dependencies[tagName];\n      if (isFromDependency) {\n        isFromDependency.isUsedAsRC = true;\n      }\n      const element = createElement(tagName);\n      const context = getContext(path);\n      addToContext(context, element);\n      setContext(path, element);\n    },\n    JSXText(path) {\n      const elems = [];\n      cleanJSXElementLiteralChild(path.node, elems);\n      const value = elems[0] ? elems[0].value : '';\n      if (!value) {\n        return;\n      }\n      const text = createText(value);\n      const context = getContext(path);\n      addToContext(context, text);\n    },\n    JSXExpressionContainer(path) {\n      // Let JSXAttribute visitor handle JSXExpressionContainer of attributes.\n      if (t.isJSXAttribute(path.parent)) {\n        return;\n      }\n\n      const expressionPath = path.get('expression');\n      const expressionNode = expressionPath.node;\n\n      if (t.isLogicalExpression(expressionNode, { operator: '&&' })) {\n        return;\n      }\n      if (t.isLogicalExpression(expressionNode, { operator: '||' })) {\n        return;\n      }\n      if (t.isConditionalExpression(expressionNode)) {\n        return;\n      }\n      if (isMapIterator(expressionNode)) {\n        return;\n      }\n      const context = getContext(path);\n      if (t.isStringLiteral(expressionNode)) {\n        const text = createText(expressionPath.node.value);\n        addToContext(context, text);\n        return;\n      }\n      const interpolationEscaped = createInterpolationEscaped(expressionPath);\n      addToContext(context, interpolationEscaped);\n    },\n    JSXAttribute(path) {\n      const context = getContext(path);\n      const name = path.node.name.name;\n      const valueNode = path.node.value;\n      if (shouldIgnoreAttr(name)) {\n        return;\n      }\n      if (!valueNode) {\n        const attribute = createAttribute({ name, value: true, isBoolean: true });\n        addToContext(context, attribute, 'attributes');\n        return;\n      }\n      if (t.isStringLiteral(valueNode)) {\n        const attribute = createAttribute({ name, value: valueNode.value, isString: true });\n        addToContext(context, attribute, 'attributes');\n        return;\n      }\n      const expression = path.get('value.expression');\n      if (t.isJSXElement(expression)) {\n        const attribute = createAttribute({ name, isNode: true });\n        addToContext(context, attribute, 'attributes');\n        setContext(path, attribute);\n        return;\n      }\n      if (name === 'style') {\n        const styles = {};\n        expression.node.properties.forEach(prop => {\n          styles[prop.key.name] = prop.value.value;\n        });\n        const stringInlineStyles = inlineStyles(styles);\n        if (stringInlineStyles) {\n          const attribute = createAttribute({ name, value: stringInlineStyles, isString: true });\n          addToContext(context, attribute, 'attributes');\n        }\n        return;\n      }\n      const attribute = createAttribute({ name, valuePath: expression });\n      addToContext(context, attribute, 'attributes');\n    },\n    CallExpression(path) {\n      const isIterator = isMapIterator(path.node);\n      if (isIterator) {\n        const iterablePath = path.get('callee.object');\n        const currentValuePath = path.get('arguments.0.params.0');\n        const indexPath = path.get('arguments.0.params.1');\n        const arrayPath = path.get('arguments.0.params.2');\n        const iteration = createIteration({ iterablePath, currentValuePath, indexPath, arrayPath });\n        const context = getContext(path);\n        addToContext(context, iteration);\n        setContext(path, iteration);\n      }\n    },\n    LogicalExpression(path) {\n      if (t.isConditionalExpression(path.parent) && path.parent.test === path.node) {\n        return;\n      }\n      if (path.findParent(node => t.isJSXAttribute(node)) || t.isLogicalExpression(path.parent)) {\n        return;\n      }\n      const left = path.get('left');\n      const context = getContext(path);\n      if (path.node.operator === '&&') {\n        const condition = createCondition({ testPath: left });\n        addToContext(context, condition);\n        setContext(path, condition);\n        return;\n      }\n      const interpolationEscaped = createInterpolationEscaped(left);\n      const condition = createCondition({ testPath: left, consequent: interpolationEscaped });\n      addToContext(context, condition);\n      setContext(path, condition);\n    },\n    ConditionalExpression(path) {\n      if (path.findParent(node => t.isJSXAttribute(node))) {\n        return;\n      }\n      const testPath = path.get('test');\n      const context = getContext(path);\n      const ignoreConsequent = t.isNullLiteral(path.node.consequent);\n      if (ignoreConsequent) {\n        testPath.replaceWith(t.UnaryExpression('!', testPath.node));\n      }\n      const condition = createCondition({ testPath });\n      addToContext(context, condition);\n      setContext(path, condition);\n    },\n    StringLiteral(path) {\n      if (path.findParent(node => t.isJSXAttribute(node))) {\n        return;\n      }\n      if (t.isConditionalExpression(path.parent)) {\n        const context = getContext(path);\n        const text = createText(path.node.value);\n        addToContext(context, text);\n      }\n    }\n  };\n\n  const generalVisitor = {\n    ImportDeclaration(path) {\n      const source = path.node.source.value;\n      const specifier = path.node.specifiers.find(node => t.isImportDefaultSpecifier(node)).local\n        .name;\n      table.dependencies[specifier] = { source, requiredFrom: inputFilePath };\n    },\n    VariableDeclaration(path) {\n      checkForReactComponent(path);\n    },\n    FunctionDeclaration(path) {\n      checkForReactComponent(path);\n    },\n    ExportDefaultDeclaration(path) {\n      const exportedComponent = path.node.declaration.name;\n      const component = table.components[exportedComponent];\n      if (component) {\n        component.defaultExport = true;\n      }\n    },\n    ObjectExpression(path) {\n      const parent = path.parent;\n      if (\n        !t.isAssignmentExpression(parent, { operator: '=' }) ||\n        !t.isMemberExpression(parent.left) ||\n        !t.isObjectExpression(parent.right) ||\n        !t.isIdentifier(parent.left.object) ||\n        !(\n          t.isIdentifier(parent.left.property, { name: 'propTypes' }) ||\n          t.isIdentifier(parent.left.property, { name: 'defaultProps' })\n        )\n      ) {\n        return;\n      }\n      const isPropTypes = t.isIdentifier(parent.left.property, { name: 'propTypes' });\n      const isDefaultProps = t.isIdentifier(parent.left.property, { name: 'defaultProps' });\n      const componentName = parent.left.object.name;\n      const component = table.components[componentName];\n      if (!component.definitions) {\n        component.definitions = path.node.properties.map((node, index) =>\n          createDefinition({ node, index, isPropTypes, isDefaultProps, path })\n        );\n      }\n      path.node.properties.forEach((node, index) => {\n        component.definitions = component.definitions.map(definition => {\n          if (definition.name === node.key.name) {\n            return createDefinition({ definition, node, index, isPropTypes, isDefaultProps, path });\n          }\n          return definition;\n        });\n      });\n    }\n  };\n\n  babelTraverse(oldAst, generalVisitor, null);\n\n  const mainComponent = Object.values(table.components).find(component => component.defaultExport);\n  addToContext(newAst, mainComponent.node);\n\n  return { ast: newAst, table };\n\n  function checkForReactComponent(path) {\n    const is = isFunctionalReactComponent(path);\n    const name = getReactComponentName(path.node);\n    const defaultExport = t.isFunctionDeclaration(path.node)\n      ? t.isExportDefaultDeclaration(path.parent)\n      : false;\n    const props = getReactComponentProps(path.node);\n    if (is) {\n      const mixin = createMixin(name, props);\n      setContext(path, mixin);\n      table.components[name] = {\n        node: mixin,\n        defaultExport,\n        createdFrom: inputFilePath\n      };\n      path.traverse(reactComponentVisitor);\n    }\n  }\n}\n\nexport default transformation;\n\nfunction setContext(path, context) {\n  path.node._context = context;\n}\n\nfunction getContext(path) {\n  const context = path.findParent(pathItem => !!pathItem.node._context).node._context;\n  return context;\n}\n\nfunction isMapIterator(node) {\n  const callee = node.callee;\n  if (!callee || !callee.property) {\n    return false;\n  }\n  const is = callee.property.name === 'map';\n  return is;\n}\n\nfunction shouldIgnoreAttr(name) {\n  if (['key', 'onClick', 'ref'].includes(name)) {\n    return true;\n  }\n  return false;\n}\n\nfunction createDefinition({ definition, node, index, isPropTypes, isDefaultProps, path }) {\n  const newDef = Object.assign({}, definition);\n  if (!newDef.name) {\n    newDef.name = node.key.name;\n  }\n  if (isPropTypes) {\n    newDef.isRequired =\n      t.isMemberExpression(node.value) &&\n      t.isIdentifier(node.value.property, { name: 'isRequired' });\n  }\n  if (isDefaultProps) {\n    newDef.defaultPath = path.get(`properties.${index}.value`);\n  }\n  return newDef;\n}\n"]}