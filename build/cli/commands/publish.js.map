{"version":3,"file":"publish.js","names":["command","describe","builder","r","alias","demandOption","type","handler","argv","console","log","chalk","bold","white","pkg","version","spinner","ora","text","start","publish","PublishTask","on","subtaskNumber","subtaskCount","subtaskName","gray","configFilePath","getNearestConfigFile","run","registry","pkgPath","process","cwd","configPath","then","packageInfo","succeed","green","gitpkgRegistry","gitpkgPackage","name","catch","err","stopAndPersist","fail","red","message","exit"],"sources":["../../../src/cli/commands/publish.js"],"sourcesContent":["import ora from 'ora';\nimport chalk from 'chalk';\nimport pkg from '../../../package.json';\nimport PublishTask from '../../tasks/Publish';\nimport { getNearestConfigFile } from '../../tasks/Task/read-config';\n\nexport const command = 'publish';\nexport const describe = 'Publishes a package to a git repository as git tag';\n\nexport const builder = {\n  r: {\n    alias: 'registry',\n    demandOption: false,\n    describe: 'Specify the gitpkg registry (defaults to the git remote origin url)',\n    type: 'string'\n  }\n};\n\nexport const handler = async argv => {\n  /* eslint-disable no-console */\n  console.log(chalk.bold.white(`gitpkg publish v${pkg.version}`));\n  const spinner = ora({ text: 'Processing...' }).start();\n\n  const publish = new PublishTask();\n  publish.on('subtask', (subtaskNumber, subtaskCount, subtaskName) => {\n    spinner.text = `${chalk.gray(`[${subtaskNumber}/${subtaskCount}]`)} ${subtaskName}...`;\n  });\n\n  const configFilePath = await getNearestConfigFile();\n\n  return publish\n    .run({\n      registry: argv.registry,\n      pkgPath: process.cwd(),\n      configPath: configFilePath\n    })\n    .then(packageInfo => {\n      spinner.succeed(\n        `${chalk.bold.green('success')} Package uploaded to ${\n          packageInfo.gitpkgRegistry\n        } with the name ${packageInfo.gitpkgPackage}.`\n      );\n      console.log(`+ ${packageInfo.name}@${packageInfo.version}`);\n    })\n    .catch(err => {\n      spinner.stopAndPersist();\n      spinner.fail(`${chalk.bold.red('error')} ${err.message}`);\n      process.exit(1);\n    });\n};\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEO,MAAMA,OAAO,GAAG,SAAhB;;AACA,MAAMC,QAAQ,GAAG,oDAAjB;;AAEA,MAAMC,OAAO,GAAG;EACrBC,CAAC,EAAE;IACDC,KAAK,EAAE,UADN;IAEDC,YAAY,EAAE,KAFb;IAGDJ,QAAQ,EAAE,qEAHT;IAIDK,IAAI,EAAE;EAJL;AADkB,CAAhB;;;AASA,MAAMC,OAAO,GAAG,MAAMC,IAAN,IAAc;EACnC;EACAC,OAAO,CAACC,GAAR,CAAYC,cAAA,CAAMC,IAAN,CAAWC,KAAX,CAAkB,mBAAkBC,gBAAA,CAAIC,OAAQ,EAAhD,CAAZ;EACA,MAAMC,OAAO,GAAG,IAAAC,YAAA,EAAI;IAAEC,IAAI,EAAE;EAAR,CAAJ,EAA+BC,KAA/B,EAAhB;EAEA,MAAMC,OAAO,GAAG,IAAIC,gBAAJ,EAAhB;EACAD,OAAO,CAACE,EAAR,CAAW,SAAX,EAAsB,CAACC,aAAD,EAAgBC,YAAhB,EAA8BC,WAA9B,KAA8C;IAClET,OAAO,CAACE,IAAR,GAAgB,GAAEP,cAAA,CAAMe,IAAN,CAAY,IAAGH,aAAc,IAAGC,YAAa,GAA7C,CAAiD,IAAGC,WAAY,KAAlF;EACD,CAFD;EAIA,MAAME,cAAc,GAAG,MAAM,IAAAC,gCAAA,GAA7B;EAEA,OAAOR,OAAO,CACXS,GADI,CACA;IACHC,QAAQ,EAAEtB,IAAI,CAACsB,QADZ;IAEHC,OAAO,EAAEC,OAAO,CAACC,GAAR,EAFN;IAGHC,UAAU,EAAEP;EAHT,CADA,EAMJQ,IANI,CAMCC,WAAW,IAAI;IACnBpB,OAAO,CAACqB,OAAR,CACG,GAAE1B,cAAA,CAAMC,IAAN,CAAW0B,KAAX,CAAiB,SAAjB,CAA4B,wBAC7BF,WAAW,CAACG,cACb,kBAAiBH,WAAW,CAACI,aAAc,GAH9C;IAKA/B,OAAO,CAACC,GAAR,CAAa,KAAI0B,WAAW,CAACK,IAAK,IAAGL,WAAW,CAACrB,OAAQ,EAAzD;EACD,CAbI,EAcJ2B,KAdI,CAcEC,GAAG,IAAI;IACZ3B,OAAO,CAAC4B,cAAR;IACA5B,OAAO,CAAC6B,IAAR,CAAc,GAAElC,cAAA,CAAMC,IAAN,CAAWkC,GAAX,CAAe,OAAf,CAAwB,IAAGH,GAAG,CAACI,OAAQ,EAAvD;IACAf,OAAO,CAACgB,IAAR,CAAa,CAAb;EACD,CAlBI,CAAP;AAmBD,CA/BM"}