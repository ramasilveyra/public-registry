{"version":3,"sources":["../../../src/cli/commands/publish.js"],"names":["command","describe","builder","r","alias","demandOption","type","handler","argv","console","log","chalk","bold","white","pkg","version","spinner","text","start","publish","PublishTask","on","subtaskNumber","subtaskCount","subtaskName","gray","configFilePath","run","registry","pkgPath","process","cwd","configPath","then","packageInfo","succeed","green","gitpkgRegistry","gitpkgPackage","name","catch","err","stopAndPersist","fail","red","message","exit"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEO,MAAMA,OAAO,GAAG,SAAhB;;AACA,MAAMC,QAAQ,GAAG,oDAAjB;;AAEA,MAAMC,OAAO,GAAG;AACrBC,EAAAA,CAAC,EAAE;AACDC,IAAAA,KAAK,EAAE,UADN;AAEDC,IAAAA,YAAY,EAAE,KAFb;AAGDJ,IAAAA,QAAQ,EAAE,qEAHT;AAIDK,IAAAA,IAAI,EAAE;AAJL;AADkB,CAAhB;;;AASA,MAAMC,OAAO,GAAG,MAAMC,IAAN,IAAc;AACnC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,eAAMC,IAAN,CAAWC,KAAX,CAAkB,mBAAkBC,iBAAIC,OAAQ,EAAhD,CAAZ;AACA,QAAMC,OAAO,GAAG,kBAAI;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAJ,EAA+BC,KAA/B,EAAhB;AAEA,QAAMC,OAAO,GAAG,IAAIC,gBAAJ,EAAhB;AACAD,EAAAA,OAAO,CAACE,EAAR,CAAW,SAAX,EAAsB,CAACC,aAAD,EAAgBC,YAAhB,EAA8BC,WAA9B,KAA8C;AAClER,IAAAA,OAAO,CAACC,IAAR,GAAgB,GAAEN,eAAMc,IAAN,CAAY,IAAGH,aAAc,IAAGC,YAAa,GAA7C,CAAiD,IAAGC,WAAY,KAAlF;AACD,GAFD;AAIA,QAAME,cAAc,GAAG,MAAM,uCAA7B;AAEA,SAAOP,OAAO,CACXQ,GADI,CACA;AACHC,IAAAA,QAAQ,EAAEpB,IAAI,CAACoB,QADZ;AAEHC,IAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,EAFN;AAGHC,IAAAA,UAAU,EAAEN;AAHT,GADA,EAMJO,IANI,CAMCC,WAAW,IAAI;AACnBlB,IAAAA,OAAO,CAACmB,OAAR,CACG,GAAExB,eAAMC,IAAN,CAAWwB,KAAX,CACD,SADC,CAED,wBAAuBF,WAAW,CAACG,cAAe,kBAAiBH,WAAW,CAACI,aAAc,GAHjG;AAKA7B,IAAAA,OAAO,CAACC,GAAR,CAAa,KAAIwB,WAAW,CAACK,IAAK,IAAGL,WAAW,CAACnB,OAAQ,EAAzD;AACD,GAbI,EAcJyB,KAdI,CAcEC,GAAG,IAAI;AACZzB,IAAAA,OAAO,CAAC0B,cAAR;AACA1B,IAAAA,OAAO,CAAC2B,IAAR,CAAc,GAAEhC,eAAMC,IAAN,CAAWgC,GAAX,CAAe,OAAf,CAAwB,IAAGH,GAAG,CAACI,OAAQ,EAAvD;AACAf,IAAAA,OAAO,CAACgB,IAAR,CAAa,CAAb;AACD,GAlBI,CAAP;AAmBD,CA/BM","sourcesContent":["import ora from 'ora';\nimport chalk from 'chalk';\nimport pkg from '../../../package.json';\nimport PublishTask from '../../tasks/Publish';\nimport { getNearestConfigFile } from '../../tasks/Task/read-config';\n\nexport const command = 'publish';\nexport const describe = 'Publishes a package to a git repository as git tag';\n\nexport const builder = {\n  r: {\n    alias: 'registry',\n    demandOption: false,\n    describe: 'Specify the gitpkg registry (defaults to the git remote origin url)',\n    type: 'string'\n  }\n};\n\nexport const handler = async argv => {\n  /* eslint-disable no-console */\n  console.log(chalk.bold.white(`gitpkg publish v${pkg.version}`));\n  const spinner = ora({ text: 'Processing...' }).start();\n\n  const publish = new PublishTask();\n  publish.on('subtask', (subtaskNumber, subtaskCount, subtaskName) => {\n    spinner.text = `${chalk.gray(`[${subtaskNumber}/${subtaskCount}]`)} ${subtaskName}...`;\n  });\n\n  const configFilePath = await getNearestConfigFile();\n\n  return publish\n    .run({\n      registry: argv.registry,\n      pkgPath: process.cwd(),\n      configPath: configFilePath\n    })\n    .then(packageInfo => {\n      spinner.succeed(\n        `${chalk.bold.green(\n          'success'\n        )} Package uploaded to ${packageInfo.gitpkgRegistry} with the name ${packageInfo.gitpkgPackage}.`\n      );\n      console.log(`+ ${packageInfo.name}@${packageInfo.version}`);\n    })\n    .catch(err => {\n      spinner.stopAndPersist();\n      spinner.fail(`${chalk.bold.red('error')} ${err.message}`);\n      process.exit(1);\n    });\n};\n"],"file":"publish.js"}