{"version":3,"sources":["../../../src/tasks/Publish/get-npm-client.js"],"names":["cacheNpmClient","getNpmClient","useYarn","shouldUseYarn","npmClient","e"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAIA,cAAc,GAAG,IAArB;;AAEe,eAAeC,YAAf,GAA8B;AAC3C,MAAID,cAAJ,EAAoB;AAClB,WAAOA,cAAP;AACD;;AAED,QAAME,OAAO,GAAG,MAAMC,aAAa,EAAnC;AACA,QAAMC,SAAS,GAAGF,OAAO,GAAG,MAAH,GAAY,KAArC;AACAF,EAAAA,cAAc,GAAGI,SAAjB;AAEA,SAAOA,SAAP;AACD;;AAED,eAAeD,aAAf,GAA+B;AAC7B,MAAI;AACF,UAAM,oBAAM,MAAN,EAAc,CAAC,WAAD,CAAd,CAAN;AACA,WAAO,IAAP;AACD,GAHD,CAGE,OAAOE,CAAP,EAAU;AACV,WAAO,KAAP;AACD;AACF","sourcesContent":["import execa from 'execa';\n\nlet cacheNpmClient = null;\n\nexport default async function getNpmClient() {\n  if (cacheNpmClient) {\n    return cacheNpmClient;\n  }\n\n  const useYarn = await shouldUseYarn();\n  const npmClient = useYarn ? 'yarn' : 'npm';\n  cacheNpmClient = npmClient;\n\n  return npmClient;\n}\n\nasync function shouldUseYarn() {\n  try {\n    await execa('yarn', ['--version']);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n"],"file":"get-npm-client.js"}