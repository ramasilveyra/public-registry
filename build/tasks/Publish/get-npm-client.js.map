{"version":3,"sources":["../../../src/tasks/Publish/get-npm-client.js"],"names":["e","shouldUseYarn","cacheNpmClient","useYarn","npmClient","getNpmClient"],"mappings":";;;;;;;gCAgBA,aAA+B;AAC7B,QAAI;AACF,YAAM,qBAAM,MAAN,EAAc,CAAC,WAAD,CAAd,CAAN;AACA,aAAO,IAAP;AACD,KAHD,CAGE,OAAOA,CAAP,EAAU;AACV,aAAO,KAAP;AACD;AACF,G;;kBAPcC,a;;;;;AAhBf;;;;;;;;AAEA,IAAIC,iBAAiB,IAArB;;;+BAEe,aAA8B;AAC3C,QAAIA,cAAJ,EAAoB;AAClB,aAAOA,cAAP;AACD;;AAED,UAAMC,UAAU,MAAMF,eAAtB;AACA,UAAMG,YAAYD,UAAU,MAAV,GAAmB,KAArC;AACAD,qBAAiBE,SAAjB;;AAEA,WAAOA,SAAP;AACD,G;;WAV6BC,Y;;;;SAAAA,Y","file":"get-npm-client.js","sourcesContent":["import execa from 'execa';\n\nlet cacheNpmClient = null;\n\nexport default async function getNpmClient() {\n  if (cacheNpmClient) {\n    return cacheNpmClient;\n  }\n\n  const useYarn = await shouldUseYarn();\n  const npmClient = useYarn ? 'yarn' : 'npm';\n  cacheNpmClient = npmClient;\n\n  return npmClient;\n}\n\nasync function shouldUseYarn() {\n  try {\n    await execa('yarn', ['--version']);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n"]}