{"version":3,"sources":["../../src/utils/add-to-context.js"],"names":["addToContext","context","node","member","addNode","type","rootName","elementName","mixinName","iterationName","conditionName","consequent","attributeName","Error","Array","isArray","push"],"mappings":";;;;;kBAUwBA,Y;;AATxB;;AASe,SAASA,YAAT,CAAsBC,OAAtB,EAA+BC,IAA/B,EAAqCC,MAArC,EAA6C;AAC1D,MAAIA,MAAJ,EAAY;AACVC,YAAQH,OAAR,EAAiBC,IAAjB,EAAuBC,MAAvB;AACA;AACD;AACD,UAAQF,QAAQI,IAAhB;AACE,SAAKC,aAAL;AACA,SAAKC,gBAAL;AACA,SAAKC,cAAL;AACEJ,cAAQH,OAAR,EAAiBC,IAAjB,EAAuB,UAAvB;AACA;AACF,SAAKO,kBAAL;AACEL,cAAQH,OAAR,EAAiBC,IAAjB,EAAuB,MAAvB;AACA;AACF,SAAKQ,kBAAL;AACE,UAAIT,QAAQU,UAAZ,EAAwB;AACtBP,gBAAQH,OAAR,EAAiBC,IAAjB,EAAuB,WAAvB;AACD,OAFD,MAEO;AACLE,gBAAQH,OAAR,EAAiBC,IAAjB,EAAuB,YAAvB;AACD;AACD;AACF,SAAKU,kBAAL;AACER,cAAQH,OAAR,EAAiBC,IAAjB,EAAuB,WAAvB;AACA;AACF;AACE,YAAM,IAAIW,KAAJ,CAAW,iCAAgCZ,QAAQI,IAAK,EAAxD,CAAN;AApBJ;AAsBD,C,CArCD;;;AAuCA,SAASD,OAAT,CAAiBH,OAAjB,EAA0BC,IAA1B,EAAgCC,MAAhC,EAAwC;AACtC,MAAIW,MAAMC,OAAN,CAAcd,QAAQE,MAAR,CAAd,CAAJ,EAAoC;AAClCF,YAAQE,MAAR,EAAgBa,IAAhB,CAAqBd,IAArB;AACA;AACD;AACDD,UAAQE,MAAR,IAAkBD,IAAlB;AACD","file":"add-to-context.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport {\n  rootName,\n  elementName,\n  conditionName,\n  iterationName,\n  mixinName,\n  attributeName\n} from '../ast';\n\nexport default function addToContext(context, node, member) {\n  if (member) {\n    addNode(context, node, member);\n    return;\n  }\n  switch (context.type) {\n    case rootName:\n    case elementName:\n    case mixinName:\n      addNode(context, node, 'children');\n      break;\n    case iterationName:\n      addNode(context, node, 'body');\n      break;\n    case conditionName:\n      if (context.consequent) {\n        addNode(context, node, 'alternate');\n      } else {\n        addNode(context, node, 'consequent');\n      }\n      break;\n    case attributeName:\n      addNode(context, node, 'valueNode');\n      break;\n    default:\n      throw new Error(`Don't know how to add node to ${context.type}`);\n  }\n}\n\nfunction addNode(context, node, member) {\n  if (Array.isArray(context[member])) {\n    context[member].push(node);\n    return;\n  }\n  context[member] = node;\n}\n"]}