{"version":3,"sources":["../../src/optimize/index.js"],"names":["optimize","ast","table","createMainVisitor","deadCodeEliminationVisitor","Mixin","exit","node","tableRC","getTableComponent","name","definitions","Element","tagName","isRC","htmlTags","includes","propsToInline","props","map","prop","definition","find","def","children","value","attributes","attr","componentNode","_","merge","Object","assign","inlinepProps","components","tableDep","dependencies","component","values","rc","createdFrom","path","defaultExport"],"mappings":";;;;;kBASwBA,Q;;AARxB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,QAAT,CAAkBC,GAAlB,EAAuBC,KAAvB,EAA8B;AAC3C,2BAAUD,GAAV,EAAe,6BAAcE,kBAAkBD,KAAlB,CAAd,EAAwCE,oCAAxC,CAAf;AACA,SAAOH,GAAP;AACD,C,CAZD;;;AAcA,SAASE,iBAAT,CAA2BD,KAA3B,EAAkC;AAChC,SAAO;AACLG,WAAO;AACLC,WAAKC,IAAL,EAAW;AACT,cAAMC,UAAUC,kBAAkBF,KAAKG,IAAvB,EAA6BR,KAA7B,CAAhB;AACA,iCAAUK,IAAV,EAAgB,wCAAuBC,QAAQG,WAA/B,CAAhB;AACD;AAJI,KADF;AAOLC,aAAS;AACPN,WAAKC,IAAL,EAAW;AACT,cAAMG,OAAOH,KAAKM,OAAlB;AACA,cAAMC,OAAO,CAACC,mBAASC,QAAT,CAAkBN,IAAlB,CAAd;AACA,cAAMF,UAAUC,kBAAkBC,IAAlB,EAAwBR,KAAxB,CAAhB;AACA,YAAIY,QAAQN,OAAZ,EAAqB;AACnB;AACA,gBAAMS,gBACJT,QAAQD,IAAR,CAAaW,KAAb,IACAV,QAAQD,IAAR,CAAaW,KAAb,CAAmBC,GAAnB,CAAuBC,QAAQ;AAC7B,kBAAMC,aACJb,QAAQG,WAAR,IAAuBH,QAAQG,WAAR,CAAoBW,IAApB,CAAyBC,OAAOA,IAAIb,IAAJ,KAAaU,IAA7C,CADzB;AAEA,gBAAIA,SAAS,UAAT,IAAuBb,KAAKiB,QAAhC,EAA0C;AACxC,qBAAO,EAAEd,MAAMU,IAAR,EAAcK,OAAOlB,KAAKiB,QAA1B,EAAoCH,UAApC,EAAP;AACD;AACD,mBAAO;AACLX,oBAAMU,IADD;AAELK,qBAAOlB,KAAKmB,UAAL,CAAgBJ,IAAhB,CAAqBK,QAAQA,KAAKjB,IAAL,KAAcU,IAA3C,CAFF;AAGLC;AAHK,aAAP;AAKD,WAXD,CAFF;AAcA;AACA,gBAAMO,gBAAgBC,iBAAEC,KAAF,CAAQ,EAAR,EAAYtB,QAAQD,IAApB,CAAtB;AACA;AACAwB,iBAAOC,MAAP,CAAczB,IAAd,EAAoBqB,aAApB;AACA,iBAAOrB,KAAKM,OAAZ;AACA,iBAAON,KAAKmB,UAAZ;AACA;AACA,cAAIT,aAAJ,EAAmB;AACjBgB,yBAAa1B,IAAb,EAAmBU,aAAnB;AACD;AACD;AACAjB,mBAASO,IAAT,EAAeL,KAAf;AACD;AACF;AAlCM;AAPJ,GAAP;AA4CD;;AAED,SAASO,iBAAT,CAA2BC,IAA3B,EAAiCR,KAAjC,EAAwC;AACtC,MAAIA,MAAMgC,UAAN,CAAiBxB,IAAjB,CAAJ,EAA4B;AAC1B,WAAOR,MAAMgC,UAAN,CAAiBxB,IAAjB,CAAP;AACD;AACD,QAAMyB,WAAWjC,MAAMkC,YAAN,CAAmB1B,IAAnB,CAAjB;AACA,MAAIyB,QAAJ,EAAc;AACZ,UAAME,YAAYN,OAAOO,MAAP,CAAcpC,MAAMgC,UAApB,EAAgCZ,IAAhC,CAChBiB,MAAMA,GAAGC,WAAH,KAAmBL,SAASM,IAA5B,IAAoCF,GAAGG,aAD7B,CAAlB;AAGA,WAAOL,SAAP;AACD;AACD,SAAO,IAAP;AACD;;AAED,SAASJ,YAAT,CAAsBhC,GAAtB,EAA2BiB,KAA3B,EAAkC;AAChC,2BAAUjB,GAAV,EAAe,6BAAc,qCAAsBiB,KAAtB,CAAd,EAA4Cd,oCAA5C,CAAf;AACD","file":"index.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport htmlTags from 'html-tags';\nimport _ from 'lodash';\nimport traverser from '../traverser';\nimport createInliningVisitor from './create-inlining-visitor';\nimport deadCodeEliminationVisitor from './dead-code-elimination-visitor';\nimport setRequiredFlagVisitor from './set-is-required-flag-visitor';\nimport mergeVisitors from './merge-visitors';\n\nexport default function optimize(ast, table) {\n  traverser(ast, mergeVisitors(createMainVisitor(table), deadCodeEliminationVisitor));\n  return ast;\n}\n\nfunction createMainVisitor(table) {\n  return {\n    Mixin: {\n      exit(node) {\n        const tableRC = getTableComponent(node.name, table);\n        traverser(node, setRequiredFlagVisitor(tableRC.definitions));\n      }\n    },\n    Element: {\n      exit(node) {\n        const name = node.tagName;\n        const isRC = !htmlTags.includes(name);\n        const tableRC = getTableComponent(name, table);\n        if (isRC && tableRC) {\n          // Generate collection of props name and value.\n          const propsToInline =\n            tableRC.node.props &&\n            tableRC.node.props.map(prop => {\n              const definition =\n                tableRC.definitions && tableRC.definitions.find(def => def.name === prop);\n              if (prop === 'children' && node.children) {\n                return { name: prop, value: node.children, definition };\n              }\n              return {\n                name: prop,\n                value: node.attributes.find(attr => attr.name === prop),\n                definition\n              };\n            });\n          // Clone Mixin.\n          const componentNode = _.merge({}, tableRC.node);\n          // Convert Element in Mixin.\n          Object.assign(node, componentNode);\n          delete node.tagName;\n          delete node.attributes;\n          // Inline props.\n          if (propsToInline) {\n            inlinepProps(node, propsToInline);\n          }\n          // Check again if new Mixin has React Components.\n          optimize(node, table);\n        }\n      }\n    }\n  };\n}\n\nfunction getTableComponent(name, table) {\n  if (table.components[name]) {\n    return table.components[name];\n  }\n  const tableDep = table.dependencies[name];\n  if (tableDep) {\n    const component = Object.values(table.components).find(\n      rc => rc.createdFrom === tableDep.path && rc.defaultExport\n    );\n    return component;\n  }\n  return null;\n}\n\nfunction inlinepProps(ast, props) {\n  traverser(ast, mergeVisitors(createInliningVisitor(props), deadCodeEliminationVisitor));\n}\n"]}