{"version":3,"sources":["../../src/optimize/set-is-required-flag-visitor.js"],"names":["setRequiredFlagVisitor","t","definitions","Attribute","exit","node","path","valuePath","flagNode","isMemberExpression","isCallExpression","firstMemberExpressionPath","nodeBabel","nodeUnreact","isIdentifier","defFound","find","def","name","isRequired"],"mappings":";;;;;kBAIwBA,sB;;AAHxB;;IAAYC,C;;AACZ;;;;;;;;AAFA;AAIe,SAASD,sBAAT,CAAgCE,WAAhC,EAA6C;AAC1D,MAAI,CAACA,WAAL,EAAkB;AAChB,WAAO,EAAP;AACD;AACD,SAAO;AACLC,eAAW;AACTC,WAAKC,IAAL,EAAW;AACT,cAAMC,OAAOD,KAAKE,SAAlB;AACA,YAAI,CAACD,IAAL,EAAW;AACT;AACD;AACDE,iBAASN,WAAT,EAAsBI,KAAKD,IAA3B,EAAiCA,IAAjC;AACA,YAAIJ,EAAEQ,kBAAF,CAAqBH,KAAKD,IAA1B,KAAmCJ,EAAES,gBAAF,CAAmBJ,KAAKD,IAAxB,CAAvC,EAAsE;AACpE,gBAAMM,4BAA4B,wCAAyBL,IAAzB,CAAlC;AACAE,mBAASN,WAAT,EAAsBS,0BAA0BN,IAAhD,EAAsDA,IAAtD;AACD;AACF;AAXQ;AADN,GAAP;AAeD;AACD,SAASG,QAAT,CAAkBN,WAAlB,EAA+BU,SAA/B,EAA0CC,WAA1C,EAAuD;AACrD,MAAI,CAACZ,EAAEa,YAAF,CAAeF,SAAf,CAAL,EAAgC;AAC9B;AACD;AACD,QAAMG,WAAWb,YAAYc,IAAZ,CAAiBC,OAAOA,IAAIC,IAAJ,KAAaN,UAAUM,IAA/C,CAAjB;AACA,MAAIH,YAAYA,SAASI,UAAzB,EAAqC;AACnCN,gBAAYM,UAAZ,GAAyB,IAAzB;AACD;AACF","file":"set-is-required-flag-visitor.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport * as t from '@babel/types';\nimport getFirstMemberExpression from '../utils/get-first-member-expression';\n\nexport default function setRequiredFlagVisitor(definitions) {\n  if (!definitions) {\n    return {};\n  }\n  return {\n    Attribute: {\n      exit(node) {\n        const path = node.valuePath;\n        if (!path) {\n          return;\n        }\n        flagNode(definitions, path.node, node);\n        if (t.isMemberExpression(path.node) || t.isCallExpression(path.node)) {\n          const firstMemberExpressionPath = getFirstMemberExpression(path);\n          flagNode(definitions, firstMemberExpressionPath.node, node);\n        }\n      }\n    }\n  };\n}\nfunction flagNode(definitions, nodeBabel, nodeUnreact) {\n  if (!t.isIdentifier(nodeBabel)) {\n    return;\n  }\n  const defFound = definitions.find(def => def.name === nodeBabel.name);\n  if (defFound && defFound.isRequired) {\n    nodeUnreact.isRequired = true;\n  }\n}\n"]}